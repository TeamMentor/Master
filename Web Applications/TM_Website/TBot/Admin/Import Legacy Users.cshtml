
@using System.Xml.Linq
@using TeamMentor.CoreLib
@using O2.DotNetWrappers.ExtensionMethods
@using O2.DotNetWrappers.DotNet

@{
    var userData = TM_UserData.Current;
    var userFolder = userData.getTmUsersFolder();
    var tmUsersXml = userFolder.pathCombine("..\\tmusers.xml");
    var tmPasswords = userFolder.pathCombine("..\\tmusers_passwords.xml");
    var importUsers = HttpContextFactory.Request.QueryString["ImportUsers"] == "yes";
    var creationDate = DateTime.Parse("03/21/2013");
    
    Func<TMUser, bool> userExists =
        (tmUser) =>
            {
                return tmUser.UserName.tmUser().notNull() ||
                       tmUser.UserID.tmUser().notNull() ||
                       (tmUser.EMail.valid() && tmUser.EMail.tmUser_FromEmail().notNull());
            };
            
   Func<TMUser, bool> isExactMatch =
        (tmUser) =>
            {
                return tmUser.UserName.tmUser().notNull() &&
                       tmUser.UserID.tmUser().notNull() &&
                       (tmUser.EMail.notValid() || tmUser.EMail.tmUser_FromEmail().notNull());
            };         
    Func<XElement, TMUser> getUserFromXElement =
        (user) =>
            {
                var userID = user.element("{https://TeamMentor.securityinnovation.com:13415/}UserID").Value;
                var userName = user.element("{https://TeamMentor.securityinnovation.com:13415/}UserName").Value;
                var firstName = user.element("{https://TeamMentor.securityinnovation.com:13415/}FirstName").Value;
                var lastName = user.element("{https://TeamMentor.securityinnovation.com:13415/}LastName").Value;
                var title = user.element("{https://TeamMentor.securityinnovation.com:13415/}Title").Value;
                var company = user.element("{https://TeamMentor.securityinnovation.com:13415/}Company").Value;
                var eMail = user.element("{https://TeamMentor.securityinnovation.com:13415/}EMail").Value;
                var groupID = user.element("{https://TeamMentor.securityinnovation.com:13415/}GroupID").Value;

                var tmUser = new TMUser
                    {
                        UserID = userID.toInt(),
                        UserName = userName,
                        FirstName = firstName,
                        LastName = lastName,
                        Title = title,
                        Company = company,
                        EMail = eMail,
                        GroupID = groupID.toInt()                        
                    };
                tmUser.Stats.CreationDate = creationDate;
                return tmUser;
            };
                   
}
<h4>Importing Users From Previous TMUsers</h4>

@if(tmUsersXml.fileExists())
{
    var users = tmUsersXml.xRoot().elements();//.take(10);
    var pwds = new Items();
    <span>
        <b>Found tmusers.xml</b>  at : @tmUsersXml <br/> with @users.size() users <br/>
        @if (tmPasswords.fileExists())
        {
            pwds = tmPasswords.load<Items>();
            <span>
                <b>Found tmusers_passwords.xml</b>  at :@tmPasswords <br/>with @pwds.size() passwords 
            </span>
        }
        <br/>
        <p>
            <a class="btn btn-inverse" href="Import Legacy Users?ImportUsers=yes">Import Users</a>
            
            @if (importUsers)
            {
                <br /><br /><span>IMPORTING USERS.... using creationDate : @creationDate</span>
            }
        </p>
        
        <br/>
    
        <table class="table table-striped table-condensed">
            <tr>
                <th>Exists?</th>   
                <th>Exact Match?</th>
                <th>Imported?</th>   
                <th>Password Set?</th> 
                <th>userID</th>            
                <th>userName</th>
                <th>firstName</th>            
                <th>lastName</th>   
                <th>title</th>
                <th>company</th>
                <th>eMail</th>
                <th>groupID</th>                
            </tr>   

    @{
        foreach (var user in users)
        {
            var tmUser = getUserFromXElement(user);
            if (tmUser.UserName != "dinis")
            {
             //   continue;
            }
                
            /*if (tmUser.EMail.contains("securityinnovation.com").isFalse() && tmUser.UserName != "admin") // use to only import/show SI users
            {
                continue;
            }*/            
            var existInTM = userExists(tmUser);
            var exactMatch = isExactMatch(tmUser);
            var trClass = (existInTM) 
                                ?  (exactMatch) 
                                        ? "success" : "error"
                                : "info";
            
            var imported = false;
            if (existInTM.isFalse() && importUsers)
            {
                userData.TMUsers.add(tmUser);
                tmUser.saveTmUser(); 
                if (userExists(tmUser))
                {
                    imported = true;
                    trClass = "warning";  
                }
                else
                {
                    trClass = "error";  
                }                                
            }            
            var passwordSet = false;
            if (exactMatch)
            {
                tmUser = tmUser.UserName.tmUser();
            }
            if (tmUser.SecretData.PasswordHash.valid())
            {
                passwordSet = true;
            }
            if (importUsers && passwordSet.isFalse())
            {                
                
                var sha256Hash = pwds[tmUser.UserName];
                if (sha256Hash.notNull())
                {
                    passwordSet = true;
                    var passwordHash = sha256Hash.hash_PBKDF2(tmUser.ID);
                    tmUser.SecretData.PasswordHash = passwordHash;
                    tmUser.saveTmUser();
                }
            }
                        
            <tr class="@trClass">
                <td>@existInTM</td>
                <td>@exactMatch</td>
                <td>@imported</td>  
                <td>@passwordSet</td>    
                <td>@tmUser.UserID</td>            
                <td>@tmUser.UserName</td>
                <td>@tmUser.FirstName</td>            
                <td>@tmUser.LastName</td>   
                <td>@tmUser.Title</td>
                <td>@tmUser.Company</td>
                <td>@tmUser.EMail</td>
                <td>@tmUser.GroupID</td>                
            </tr>
        }
    }

        </table>

    </span>
}
else
{
    <span>
    <hr/>

    <b>Did not Found tmusers.xml</b> at location: @System.IO.Directory.GetParent(userFolder).FullName
    </span>
}


