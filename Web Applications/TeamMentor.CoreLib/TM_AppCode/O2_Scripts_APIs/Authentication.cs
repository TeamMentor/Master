//O2Ref:System.Web.Services.dll
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.1432.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "AuthenticationSoap", Namespace = "https://TeamMentor.securityinnovation.com:13415/")]
public partial class Authentication : System.Web.Services.Protocols.SoapHttpClientProtocol
{

	private System.Threading.SendOrPostCallback GetTimeOperationCompleted;

	private System.Threading.SendOrPostCallback CreateUserOperationCompleted;

	private System.Threading.SendOrPostCallback LoginUserOperationCompleted;

	private System.Threading.SendOrPostCallback LogoutUserOperationCompleted;

	private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;

	private System.Threading.SendOrPostCallback UpdatePasswordOperationCompleted;

	private System.Threading.SendOrPostCallback GetPasswordOperationCompleted;

	private System.Threading.SendOrPostCallback UpdateUserInformationOperationCompleted;

	private System.Threading.SendOrPostCallback GetUserInformationOperationCompleted;

	private System.Threading.SendOrPostCallback GetAvailableLicensesOperationCompleted;

	private System.Threading.SendOrPostCallback IsActiveOperationCompleted;

	private System.Threading.SendOrPostCallback SetActiveOperationCompleted;

	private System.Threading.SendOrPostCallback GetNoteOperationCompleted;

	private System.Threading.SendOrPostCallback SetNoteOperationCompleted;

	private System.Threading.SendOrPostCallback GetAllUsersOperationCompleted;

	private System.Threading.SendOrPostCallback IsRbacDisabledOperationCompleted;

	/// <remarks/>
	public Authentication()
	{
		this.Url = "http://localhost:49999/WebServices/Authentication.asmx";
	}

	/// <remarks/>
	public event GetTimeCompletedEventHandler GetTimeCompleted;

	/// <remarks/>
	public event CreateUserCompletedEventHandler CreateUserCompleted;

	/// <remarks/>
	public event LoginUserCompletedEventHandler LoginUserCompleted;

	/// <remarks/>
	public event LogoutUserCompletedEventHandler LogoutUserCompleted;

	/// <remarks/>
	public event DeleteUserCompletedEventHandler DeleteUserCompleted;

	/// <remarks/>
	public event UpdatePasswordCompletedEventHandler UpdatePasswordCompleted;

	/// <remarks/>
	public event GetPasswordCompletedEventHandler GetPasswordCompleted;

	/// <remarks/>
	public event UpdateUserInformationCompletedEventHandler UpdateUserInformationCompleted;

	/// <remarks/>
	public event GetUserInformationCompletedEventHandler GetUserInformationCompleted;

	/// <remarks/>
	public event GetAvailableLicensesCompletedEventHandler GetAvailableLicensesCompleted;

	/// <remarks/>
	public event IsActiveCompletedEventHandler IsActiveCompleted;

	/// <remarks/>
	public event SetActiveCompletedEventHandler SetActiveCompleted;

	/// <remarks/>
	public event GetNoteCompletedEventHandler GetNoteCompleted;

	/// <remarks/>
	public event SetNoteCompletedEventHandler SetNoteCompleted;

	/// <remarks/>
	public event GetAllUsersCompletedEventHandler GetAllUsersCompleted;

	/// <remarks/>
	public event IsRbacDisabledCompletedEventHandler IsRbacDisabledCompleted;

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/GetTime", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public string GetTime()
	{
		object[] results = this.Invoke("GetTime", new object[0]);
		return ((string)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginGetTime(System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("GetTime", new object[0], callback, asyncState);
	}

	/// <remarks/>
	public string EndGetTime(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((string)(results[0]));
	}

	/// <remarks/>
	public void GetTimeAsync()
	{
		this.GetTimeAsync(null);
	}

	/// <remarks/>
	public void GetTimeAsync(object userState)
	{
		if ((this.GetTimeOperationCompleted == null)) {
			this.GetTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeOperationCompleted);
		}
		this.InvokeAsync("GetTime", new object[0], this.GetTimeOperationCompleted, userState);
	}

	private void OnGetTimeOperationCompleted(object arg)
	{
		if ((this.GetTimeCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.GetTimeCompleted(this, new GetTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/CreateUser", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public int CreateUser(System.Guid AdminSessionID, string username, string passwordHash, string email, string firstname, string lastname, string note)
	{
		object[] results = this.Invoke("CreateUser", new object[] {
			AdminSessionID,
			username,
			passwordHash,
			email,
			firstname,
			lastname,
			note
		});
		return ((int)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginCreateUser(System.Guid AdminSessionID, string username, string passwordHash, string email, string firstname, string lastname, string note, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("CreateUser", new object[] {
			AdminSessionID,
			username,
			passwordHash,
			email,
			firstname,
			lastname,
			note
		}, callback, asyncState);
	}

	/// <remarks/>
	public int EndCreateUser(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((int)(results[0]));
	}

	/// <remarks/>
	public void CreateUserAsync(System.Guid AdminSessionID, string username, string passwordHash, string email, string firstname, string lastname, string note)
	{
		this.CreateUserAsync(AdminSessionID, username, passwordHash, email, firstname, lastname, note, null);
	}

	/// <remarks/>
	public void CreateUserAsync(System.Guid AdminSessionID, string username, string passwordHash, string email, string firstname, string lastname, string note, object userState)
	{
		if ((this.CreateUserOperationCompleted == null)) {
			this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
		}
		this.InvokeAsync("CreateUser", new object[] {
			AdminSessionID,
			username,
			passwordHash,
			email,
			firstname,
			lastname,
			note
		}, this.CreateUserOperationCompleted, userState);
	}

	private void OnCreateUserOperationCompleted(object arg)
	{
		if ((this.CreateUserCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/LoginUser", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public System.Guid LoginUser(string userName, string passwordHash)
	{
		object[] results = this.Invoke("LoginUser", new object[] {
			userName,
			passwordHash
		});
		return ((System.Guid)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginLoginUser(string userName, string passwordHash, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("LoginUser", new object[] {
			userName,
			passwordHash
		}, callback, asyncState);
	}

	/// <remarks/>
	public System.Guid EndLoginUser(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((System.Guid)(results[0]));
	}

	/// <remarks/>
	public void LoginUserAsync(string userName, string passwordHash)
	{
		this.LoginUserAsync(userName, passwordHash, null);
	}

	/// <remarks/>
	public void LoginUserAsync(string userName, string passwordHash, object userState)
	{
		if ((this.LoginUserOperationCompleted == null)) {
			this.LoginUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginUserOperationCompleted);
		}
		this.InvokeAsync("LoginUser", new object[] {
			userName,
			passwordHash
		}, this.LoginUserOperationCompleted, userState);
	}

	private void OnLoginUserOperationCompleted(object arg)
	{
		if ((this.LoginUserCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.LoginUserCompleted(this, new LoginUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/LogoutUser", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public bool LogoutUser(System.Guid AdminSessionID, System.Guid SessionID)
	{
		object[] results = this.Invoke("LogoutUser", new object[] {
			AdminSessionID,
			SessionID
		});
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginLogoutUser(System.Guid AdminSessionID, System.Guid SessionID, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("LogoutUser", new object[] {
			AdminSessionID,
			SessionID
		}, callback, asyncState);
	}

	/// <remarks/>
	public bool EndLogoutUser(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public void LogoutUserAsync(System.Guid AdminSessionID, System.Guid SessionID)
	{
		this.LogoutUserAsync(AdminSessionID, SessionID, null);
	}

	/// <remarks/>
	public void LogoutUserAsync(System.Guid AdminSessionID, System.Guid SessionID, object userState)
	{
		if ((this.LogoutUserOperationCompleted == null)) {
			this.LogoutUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutUserOperationCompleted);
		}
		this.InvokeAsync("LogoutUser", new object[] {
			AdminSessionID,
			SessionID
		}, this.LogoutUserOperationCompleted, userState);
	}

	private void OnLogoutUserOperationCompleted(object arg)
	{
		if ((this.LogoutUserCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.LogoutUserCompleted(this, new LogoutUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/DeleteUser", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public bool DeleteUser(System.Guid AdminSessionID, int UserID)
	{
		object[] results = this.Invoke("DeleteUser", new object[] {
			AdminSessionID,
			UserID
		});
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginDeleteUser(System.Guid AdminSessionID, int UserID, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("DeleteUser", new object[] {
			AdminSessionID,
			UserID
		}, callback, asyncState);
	}

	/// <remarks/>
	public bool EndDeleteUser(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public void DeleteUserAsync(System.Guid AdminSessionID, int UserID)
	{
		this.DeleteUserAsync(AdminSessionID, UserID, null);
	}

	/// <remarks/>
	public void DeleteUserAsync(System.Guid AdminSessionID, int UserID, object userState)
	{
		if ((this.DeleteUserOperationCompleted == null)) {
			this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
		}
		this.InvokeAsync("DeleteUser", new object[] {
			AdminSessionID,
			UserID
		}, this.DeleteUserOperationCompleted, userState);
	}

	private void OnDeleteUserOperationCompleted(object arg)
	{
		if ((this.DeleteUserCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/UpdatePassword", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public bool UpdatePassword(System.Guid AdminSessionID, int UserID, string newPasswordHash)
	{
		object[] results = this.Invoke("UpdatePassword", new object[] {
			AdminSessionID,
			UserID,
			newPasswordHash
		});
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginUpdatePassword(System.Guid AdminSessionID, int UserID, string newPasswordHash, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("UpdatePassword", new object[] {
			AdminSessionID,
			UserID,
			newPasswordHash
		}, callback, asyncState);
	}

	/// <remarks/>
	public bool EndUpdatePassword(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public void UpdatePasswordAsync(System.Guid AdminSessionID, int UserID, string newPasswordHash)
	{
		this.UpdatePasswordAsync(AdminSessionID, UserID, newPasswordHash, null);
	}

	/// <remarks/>
	public void UpdatePasswordAsync(System.Guid AdminSessionID, int UserID, string newPasswordHash, object userState)
	{
		if ((this.UpdatePasswordOperationCompleted == null)) {
			this.UpdatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordOperationCompleted);
		}
		this.InvokeAsync("UpdatePassword", new object[] {
			AdminSessionID,
			UserID,
			newPasswordHash
		}, this.UpdatePasswordOperationCompleted, userState);
	}

	private void OnUpdatePasswordOperationCompleted(object arg)
	{
		if ((this.UpdatePasswordCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/GetPassword", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public string GetPassword(System.Guid AdminSessionID, int UserID)
	{
		object[] results = this.Invoke("GetPassword", new object[] {
			AdminSessionID,
			UserID
		});
		return ((string)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginGetPassword(System.Guid AdminSessionID, int UserID, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("GetPassword", new object[] {
			AdminSessionID,
			UserID
		}, callback, asyncState);
	}

	/// <remarks/>
	public string EndGetPassword(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((string)(results[0]));
	}

	/// <remarks/>
	public void GetPasswordAsync(System.Guid AdminSessionID, int UserID)
	{
		this.GetPasswordAsync(AdminSessionID, UserID, null);
	}

	/// <remarks/>
	public void GetPasswordAsync(System.Guid AdminSessionID, int UserID, object userState)
	{
		if ((this.GetPasswordOperationCompleted == null)) {
			this.GetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordOperationCompleted);
		}
		this.InvokeAsync("GetPassword", new object[] {
			AdminSessionID,
			UserID
		}, this.GetPasswordOperationCompleted, userState);
	}

	private void OnGetPasswordOperationCompleted(object arg)
	{
		if ((this.GetPasswordCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.GetPasswordCompleted(this, new GetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/UpdateUserInformation", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public bool UpdateUserInformation(System.Guid AdminSessionID, int UserID, string email, string firstname, string lastname)
	{
		object[] results = this.Invoke("UpdateUserInformation", new object[] {
			AdminSessionID,
			UserID,
			email,
			firstname,
			lastname
		});
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginUpdateUserInformation(System.Guid AdminSessionID, int UserID, string email, string firstname, string lastname, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("UpdateUserInformation", new object[] {
			AdminSessionID,
			UserID,
			email,
			firstname,
			lastname
		}, callback, asyncState);
	}

	/// <remarks/>
	public bool EndUpdateUserInformation(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public void UpdateUserInformationAsync(System.Guid AdminSessionID, int UserID, string email, string firstname, string lastname)
	{
		this.UpdateUserInformationAsync(AdminSessionID, UserID, email, firstname, lastname, null);
	}

	/// <remarks/>
	public void UpdateUserInformationAsync(System.Guid AdminSessionID, int UserID, string email, string firstname, string lastname, object userState)
	{
		if ((this.UpdateUserInformationOperationCompleted == null)) {
			this.UpdateUserInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInformationOperationCompleted);
		}
		this.InvokeAsync("UpdateUserInformation", new object[] {
			AdminSessionID,
			UserID,
			email,
			firstname,
			lastname
		}, this.UpdateUserInformationOperationCompleted, userState);
	}

	private void OnUpdateUserInformationOperationCompleted(object arg)
	{
		if ((this.UpdateUserInformationCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.UpdateUserInformationCompleted(this, new UpdateUserInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/GetUserInformation", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public TMUser GetUserInformation(System.Guid AdminSessionID, int UserID)
	{
		object[] results = this.Invoke("GetUserInformation", new object[] {
			AdminSessionID,
			UserID
		});
		return ((TMUser)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginGetUserInformation(System.Guid AdminSessionID, int UserID, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("GetUserInformation", new object[] {
			AdminSessionID,
			UserID
		}, callback, asyncState);
	}

	/// <remarks/>
	public TMUser EndGetUserInformation(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((TMUser)(results[0]));
	}

	/// <remarks/>
	public void GetUserInformationAsync(System.Guid AdminSessionID, int UserID)
	{
		this.GetUserInformationAsync(AdminSessionID, UserID, null);
	}

	/// <remarks/>
	public void GetUserInformationAsync(System.Guid AdminSessionID, int UserID, object userState)
	{
		if ((this.GetUserInformationOperationCompleted == null)) {
			this.GetUserInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInformationOperationCompleted);
		}
		this.InvokeAsync("GetUserInformation", new object[] {
			AdminSessionID,
			UserID
		}, this.GetUserInformationOperationCompleted, userState);
	}

	private void OnGetUserInformationOperationCompleted(object arg)
	{
		if ((this.GetUserInformationCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.GetUserInformationCompleted(this, new GetUserInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/GetAvailableLicenses", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public string GetAvailableLicenses(System.Guid AdminSessionID)
	{
		object[] results = this.Invoke("GetAvailableLicenses", new object[] { AdminSessionID });
		return ((string)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginGetAvailableLicenses(System.Guid AdminSessionID, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("GetAvailableLicenses", new object[] { AdminSessionID }, callback, asyncState);
	}

	/// <remarks/>
	public string EndGetAvailableLicenses(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((string)(results[0]));
	}

	/// <remarks/>
	public void GetAvailableLicensesAsync(System.Guid AdminSessionID)
	{
		this.GetAvailableLicensesAsync(AdminSessionID, null);
	}

	/// <remarks/>
	public void GetAvailableLicensesAsync(System.Guid AdminSessionID, object userState)
	{
		if ((this.GetAvailableLicensesOperationCompleted == null)) {
			this.GetAvailableLicensesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableLicensesOperationCompleted);
		}
		this.InvokeAsync("GetAvailableLicenses", new object[] { AdminSessionID }, this.GetAvailableLicensesOperationCompleted, userState);
	}

	private void OnGetAvailableLicensesOperationCompleted(object arg)
	{
		if ((this.GetAvailableLicensesCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.GetAvailableLicensesCompleted(this, new GetAvailableLicensesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/IsActive", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public bool IsActive(System.Guid AdminSessionID, int UserID)
	{
		object[] results = this.Invoke("IsActive", new object[] {
			AdminSessionID,
			UserID
		});
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginIsActive(System.Guid AdminSessionID, int UserID, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("IsActive", new object[] {
			AdminSessionID,
			UserID
		}, callback, asyncState);
	}

	/// <remarks/>
	public bool EndIsActive(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public void IsActiveAsync(System.Guid AdminSessionID, int UserID)
	{
		this.IsActiveAsync(AdminSessionID, UserID, null);
	}

	/// <remarks/>
	public void IsActiveAsync(System.Guid AdminSessionID, int UserID, object userState)
	{
		if ((this.IsActiveOperationCompleted == null)) {
			this.IsActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsActiveOperationCompleted);
		}
		this.InvokeAsync("IsActive", new object[] {
			AdminSessionID,
			UserID
		}, this.IsActiveOperationCompleted, userState);
	}

	private void OnIsActiveOperationCompleted(object arg)
	{
		if ((this.IsActiveCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.IsActiveCompleted(this, new IsActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/SetActive", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public bool SetActive(System.Guid AdminSessionID, int UserID, bool active)
	{
		object[] results = this.Invoke("SetActive", new object[] {
			AdminSessionID,
			UserID,
			active
		});
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginSetActive(System.Guid AdminSessionID, int UserID, bool active, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("SetActive", new object[] {
			AdminSessionID,
			UserID,
			active
		}, callback, asyncState);
	}

	/// <remarks/>
	public bool EndSetActive(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public void SetActiveAsync(System.Guid AdminSessionID, int UserID, bool active)
	{
		this.SetActiveAsync(AdminSessionID, UserID, active, null);
	}

	/// <remarks/>
	public void SetActiveAsync(System.Guid AdminSessionID, int UserID, bool active, object userState)
	{
		if ((this.SetActiveOperationCompleted == null)) {
			this.SetActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetActiveOperationCompleted);
		}
		this.InvokeAsync("SetActive", new object[] {
			AdminSessionID,
			UserID,
			active
		}, this.SetActiveOperationCompleted, userState);
	}

	private void OnSetActiveOperationCompleted(object arg)
	{
		if ((this.SetActiveCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.SetActiveCompleted(this, new SetActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/GetNote", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public string GetNote(System.Guid AdminSessionID, int UserID)
	{
		object[] results = this.Invoke("GetNote", new object[] {
			AdminSessionID,
			UserID
		});
		return ((string)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginGetNote(System.Guid AdminSessionID, int UserID, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("GetNote", new object[] {
			AdminSessionID,
			UserID
		}, callback, asyncState);
	}

	/// <remarks/>
	public string EndGetNote(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((string)(results[0]));
	}

	/// <remarks/>
	public void GetNoteAsync(System.Guid AdminSessionID, int UserID)
	{
		this.GetNoteAsync(AdminSessionID, UserID, null);
	}

	/// <remarks/>
	public void GetNoteAsync(System.Guid AdminSessionID, int UserID, object userState)
	{
		if ((this.GetNoteOperationCompleted == null)) {
			this.GetNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoteOperationCompleted);
		}
		this.InvokeAsync("GetNote", new object[] {
			AdminSessionID,
			UserID
		}, this.GetNoteOperationCompleted, userState);
	}

	private void OnGetNoteOperationCompleted(object arg)
	{
		if ((this.GetNoteCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.GetNoteCompleted(this, new GetNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/SetNote", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public bool SetNote(System.Guid AdminSessionID, int UserID, string note)
	{
		object[] results = this.Invoke("SetNote", new object[] {
			AdminSessionID,
			UserID,
			note
		});
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginSetNote(System.Guid AdminSessionID, int UserID, string note, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("SetNote", new object[] {
			AdminSessionID,
			UserID,
			note
		}, callback, asyncState);
	}

	/// <remarks/>
	public bool EndSetNote(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public void SetNoteAsync(System.Guid AdminSessionID, int UserID, string note)
	{
		this.SetNoteAsync(AdminSessionID, UserID, note, null);
	}

	/// <remarks/>
	public void SetNoteAsync(System.Guid AdminSessionID, int UserID, string note, object userState)
	{
		if ((this.SetNoteOperationCompleted == null)) {
			this.SetNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetNoteOperationCompleted);
		}
		this.InvokeAsync("SetNote", new object[] {
			AdminSessionID,
			UserID,
			note
		}, this.SetNoteOperationCompleted, userState);
	}

	private void OnSetNoteOperationCompleted(object arg)
	{
		if ((this.SetNoteCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.SetNoteCompleted(this, new SetNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/GetAllUsers", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public TMUser[] GetAllUsers(System.Guid AdminSessionID)
	{
		object[] results = this.Invoke("GetAllUsers", new object[] { AdminSessionID });
		return ((TMUser[])(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginGetAllUsers(System.Guid AdminSessionID, System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("GetAllUsers", new object[] { AdminSessionID }, callback, asyncState);
	}

	/// <remarks/>
	public TMUser[] EndGetAllUsers(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((TMUser[])(results[0]));
	}

	/// <remarks/>
	public void GetAllUsersAsync(System.Guid AdminSessionID)
	{
		this.GetAllUsersAsync(AdminSessionID, null);
	}

	/// <remarks/>
	public void GetAllUsersAsync(System.Guid AdminSessionID, object userState)
	{
		if ((this.GetAllUsersOperationCompleted == null)) {
			this.GetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOperationCompleted);
		}
		this.InvokeAsync("GetAllUsers", new object[] { AdminSessionID }, this.GetAllUsersOperationCompleted, userState);
	}

	private void OnGetAllUsersOperationCompleted(object arg)
	{
		if ((this.GetAllUsersCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://TeamMentor.securityinnovation.com:13415/IsRbacDisabled", RequestNamespace = "https://TeamMentor.securityinnovation.com:13415/", ResponseNamespace = "https://TeamMentor.securityinnovation.com:13415/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public bool IsRbacDisabled()
	{
		object[] results = this.Invoke("IsRbacDisabled", new object[0]);
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public System.IAsyncResult BeginIsRbacDisabled(System.AsyncCallback callback, object asyncState)
	{
		return this.BeginInvoke("IsRbacDisabled", new object[0], callback, asyncState);
	}

	/// <remarks/>
	public bool EndIsRbacDisabled(System.IAsyncResult asyncResult)
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((bool)(results[0]));
	}

	/// <remarks/>
	public void IsRbacDisabledAsync()
	{
		this.IsRbacDisabledAsync(null);
	}

	/// <remarks/>
	public void IsRbacDisabledAsync(object userState)
	{
		if ((this.IsRbacDisabledOperationCompleted == null)) {
			this.IsRbacDisabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRbacDisabledOperationCompleted);
		}
		this.InvokeAsync("IsRbacDisabled", new object[0], this.IsRbacDisabledOperationCompleted, userState);
	}

	private void OnIsRbacDisabledOperationCompleted(object arg)
	{
		if ((this.IsRbacDisabledCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.IsRbacDisabledCompleted(this, new IsRbacDisabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}

	/// <remarks/>
	public new void CancelAsync(object userState)
	{
		base.CancelAsync(userState);
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "https://TeamMentor.securityinnovation.com:13415/")]
public partial class TMUser
{	
	public int UserID			{ get; set; }
	public string	UserName	{ get; set; }
	public string	FirstName	{ get; set; }
	public string	LastName	{ get; set; }
	public string	Title		{ get; set; }
	public string	Company		{ get; set; }
	public string	EMail		{ get; set; }
	public int		GroupID		{ get; set; }
	public bool		IsActive	{ get; set; }
	public string	CSRF_Token	{ get; set; }

	[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
	public System.Nullable<System.DateTime> ExpirationDate { get; set; }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetTimeCompletedEventHandler(object sender, GetTimeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal GetTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public string Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((string)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public int Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((int)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void LoginUserCompletedEventHandler(object sender, LoginUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LoginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal LoginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public System.Guid Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((System.Guid)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void LogoutUserCompletedEventHandler(object sender, LogoutUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LogoutUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal LogoutUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public bool Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((bool)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public bool Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((bool)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void UpdatePasswordCompletedEventHandler(object sender, UpdatePasswordCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public bool Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((bool)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetPasswordCompletedEventHandler(object sender, GetPasswordCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal GetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public string Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((string)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void UpdateUserInformationCompletedEventHandler(object sender, UpdateUserInformationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateUserInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal UpdateUserInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public bool Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((bool)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetUserInformationCompletedEventHandler(object sender, GetUserInformationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUserInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal GetUserInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public TMUser Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((TMUser)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetAvailableLicensesCompletedEventHandler(object sender, GetAvailableLicensesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAvailableLicensesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal GetAvailableLicensesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public string Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((string)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void IsActiveCompletedEventHandler(object sender, IsActiveCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class IsActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal IsActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public bool Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((bool)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void SetActiveCompletedEventHandler(object sender, SetActiveCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal SetActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public bool Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((bool)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetNoteCompletedEventHandler(object sender, GetNoteCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal GetNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public string Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((string)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void SetNoteCompletedEventHandler(object sender, SetNoteCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal SetNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public bool Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((bool)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetAllUsersCompletedEventHandler(object sender, GetAllUsersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public TMUser[] Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((TMUser[])(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void IsRbacDisabledCompletedEventHandler(object sender, IsRbacDisabledCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class IsRbacDisabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

	private object[] results;

	internal IsRbacDisabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
	{
		this.results = results;
	}

	/// <remarks/>
	public bool Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((bool)(this.results[0]));
		}
	}
}
