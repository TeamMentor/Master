<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-0000008ea142</Id>
    <Library_Id>b6f408c5-6e6e-4bc0-90a5-0bb10becc2ce</Library_Id>
    <Title>Static Format Strings Are Used</Title>
    <Category>Dangerous APIs</Category>
    <Phase>Implementation</Phase>
    <Technology>iOS</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Static Format Strings Are Used</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="WikiText">
    <Data><![CDATA[==What to Check For==

Verify that static format strings are used with functions that use format strings.

==Why==

An attacker that can control the contents of a format string may be able to execute arbitrary code.

==How to Check==

To verify that untrusted data is not included in format strings:

# **Identify code that uses formatted input-output functions.** The following is a list of formatted input-output functions:
#* //NSLog//
#* //stringWithFormat//
#* //stringByAppendingFormat//
#* //initWithFormat//
#* //appendFormat//
#* //alertWithMessageText//
#* //informativeTextWithFormat//
#* //format//
#* //appendFormat//
#* //predicateWithFormat//
#* //sprintf//
#* //_snprintf//
#* //printf//
#* //fprintf//
#* //scanf//
#* //fscanf//
#* //sscanf//
#* //swprintf//
#* //wsprintfA//
#* //wsprintfW//
#* //vsprintf//
#* //vswprintf//
#* //_snwprintf//
#* //_vsnprintf//
#* //_vsnwprintf//
#* //vprintf//
#* //vwprintf//
#* //vfprintf//
#* //vwfprintf//
#* //fwscanf//
#* //wscanf//
#* //swscanf//
# **Avoid using formatted functions.** Consider replacing formatted input-output functions with other functions, which are not prone to format string vulnerabilities.
# **Verify that untrusted data is not included in format strings.** Examine each format string used by the application. Make sure that user input is never included in format strings. If possible, use only static format strings.

==How to Fix==

Perform the following actions to assure that user input is not used in format strings:

# **Identify code that uses formatted input-output functions.** The following is a list of formatted input-output functions:
#* //NSLog//
#* //stringWithFormat//
#* //stringByAppendingFormat//
#* //initWithFormat//
#* //appendFormat//
#* //alertWithMessageText//
#* //informativeTextWithFormat//
#* //format//
#* //appendFormat//
#* //predicateWithFormat//
#* //sprintf//
#* //_snprintf//
#* //printf//
#* //fprintf//
#* //scanf//
#* //fscanf//
#* //sscanf//
#* //swprintf//
#* //wsprintfA//
#* //wsprintfW//
#* //vsprintf//
#* //vswprintf//
#* //_snwprintf//
#* //_vsnprintf//
#* //_vsnwprintf//
#* //vprintf//
#* //vwprintf//
#* //vfprintf//
#* //vwfprintf//
#* //fwscanf//
#* //wscanf//
#* //swscanf//
# **Avoid using formatted functions.** Consider replacing formatted input-output functions with other functions, which are not prone to format string vulnerabilities.
# **(Re-)Write code to exclude user input from format strings.** Place user input in separate variables and pass it as variadic arguments to the formatted input-output functions, instead of placing it in a format strings.

==Dangerous API Guidelines==
* [[Avoid Using URL Handlers for Sensitive Operations]]
* [[Disable Parsing of External XML Entities]]
* [[Use Static Format Strings]]

==Dangerous API Checklists==
* [[URL Handlers Are Not Used for Sensitive Operations]]
* [[Parsing of External XML Entities Is Disabled]]
* [[Static Format Strings Are Used]]]]></Data>
  </Content>
</TeamMentor_Article>