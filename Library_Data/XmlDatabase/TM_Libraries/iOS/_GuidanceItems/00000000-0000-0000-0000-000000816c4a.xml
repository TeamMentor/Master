<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-000000816c4a</Id>
    <Library_Id>b6f408c5-6e6e-4bc0-90a5-0bb10becc2ce</Library_Id>
    <Title>Authentication Attempts Are Throttled</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>iOS</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Authentication Attempts Are Throttled</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="WikiText">
    <Data><![CDATA[==Applies To==

* iOS applications that authenticate to a remote server.

==What to Check For==

Verify that authentication attempts are throttled.

==Why==

Throttling authentication attempts makes password guessing attacks less effective. Authentication throttling should be implemented on the server to be effective.

==How to Check==

To verify that authentication attempts are throttled:

# **Review authentication throttling requirements.** Determine the time-out period between each authentication attempt. A recommended time-out period is three seconds.
# **Identify authentication code.** Identify server-side code that is responsible for authentication.
# **Review authentication code.** Examine authentication code to make sure that repeated authentication attempts are throttled. Verify that log entries are generated that indicate multiple repeated failed authentication attempts. Make sure the application keeps track of clients that attempt to authenticate using IPs and session cookies.
# **Attempt logging into the application repeatedly.** Test authentication throttling by attempting to log in repeatedly and observing that there is a pause between being allowed to attempt to authenticate again.


==How to Fix==

To throttle authentication attempts:

# **Define authentication throttling requirements.** Define the time-out period between each authentication attempt. A recommended time-out period is three seconds.
# **Identify authentication code.** Identify server-side code that is responsible for authentication.
# **Add code that throttles authentication attempts.** Add server-side code to the authentication code identified in the previous step to wait for the required time period before handling another authentication request. Keep track of clients using IPs and session cookies to make it harder to bypass authentication throttling.

==Authentication Guidelines==
* [[Change Root Passwords on Jailbroken Devices]]
* [[Encrypt Authentication Credentials Sent over the Network]]
* [[Implement a Secure Password Reset Function]]
* [[Throttle Authentication Attempts]]
* [[Use Server-side Authentication]]

==Authentication Checklists==
* [[Root Passwords Have Been Changed on Jailbroken Devices]]
* [[Authentication Credentials Sent over the Network Are Encrypted]]
* [[A Secure Password Reset Function Is Implemented]]
* [[Authentication Attempts Are Throttled]]
* [[Authentication Is Implemented on the Server-side]]
]]></Data>
  </Content>
</TeamMentor_Article>