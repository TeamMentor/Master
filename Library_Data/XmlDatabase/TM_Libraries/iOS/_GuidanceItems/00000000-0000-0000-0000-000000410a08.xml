<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-000000410a08</Id>
    <Library_Id>b6f408c5-6e6e-4bc0-90a5-0bb10becc2ce</Library_Id>
    <Title>Validate and Encode Data Passed to UIWebView Controls</Title>
    <Category>Data Validation</Category>
    <Phase>Implementation</Phase>
    <Technology>iOS</Technology>
    <Type>Guideline</Type>
    <DirectLink>Validate and Encode Data Passed to UIWebView Controls</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="WikiText">
    <Data><![CDATA[==What to Do==

Validate data passed to //UIWebView// controls.

==Why==

Validating data passed to //UIWebView// controls helps prevent Cross-Site Scripting vulnerabilities. //UIWebView// controls are capable of executing JavaScript passed to them. If unvalidated data is passed to //UIWebView// controls, it may be possible for an attacker to pass malicious JavaScript, which will then be executed in the context of the application.

==How==

To validate data passed to //UIWebView// controls:

# **Identify data passed to //UIWebView// controls.** Examine the application design and identify what types of data are handled by //UIWebView// controls, if any.
# **Identify code that passes data to //UIWebView// controls.** Review code to identify all //UIWebView// controls used by the application and code that passes data that may include JavaScript to them. Trouble areas may be found by searching for //stringByEvaluatingJavaScriptFromString// method calls.
# **Write validation code for data passed to //UIWebView// controls.** Add data validation methods to the application that validate all data types sent to //UIWebView// controls used by the application. Pay particular attention to any data that may include JavaScript.
# **Write encoding code for data passed to //UIWebView// controls.** Write encoding routines that handle all the types of data that are passed to //UIWebView// controls. Unfortunately, there appear to be no standard libraries that handle encoding for iOS. Things to watch out for are: converting data to the same character-encoding before validating or encoding, escaping HTML entities, escaping JavaScript entities, and escaping XML entities, depending on context.
# **Validate and encode data passed to //UIWebView// controls.** Use the respective validation and encoding functions for each respective type of data before passing it to //UIWebView// controls.

==Data Validation Guidelines==
* [[Canonicalize File Names and Paths]]
* [[Check File Paths and Names for Null Bytes]]
* [[Validate All Input]]
* [[Validate and Encode Data Inserted into XML Documents]]
* [[Validate and Encode Data Passed to UIWebView Controls]]
* [[Validate File Formats]]

==Data Validation Checklists==
* [[File Names and Paths Are Canonicalized]]
* [[File Paths and Names Are Checked for Null Bytes]]
* [[All Input Is Validated]]
* [[Data Inserted into XML Documents Is Validated and Encoded]]
* [[Data Passed to UIWebView Controls Is Validated and Encoded]]
* [[File Formats Are Validated]]

==Additional Resources==

* For information about //escapedTemplateForString// and //escapedTemplateForString// functions, please see http://developer.apple.com/library/ios/#documentation/Foundation/Reference/NSRegularExpression_Class/Reference/Reference.html
* For more information about //UIWebView// controls, please see http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebView_Class/Reference/Reference.html]]></Data>
  </Content>
</TeamMentor_Article>