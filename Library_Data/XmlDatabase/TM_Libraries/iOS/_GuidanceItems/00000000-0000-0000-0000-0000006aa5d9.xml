<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-0000006aa5d9</Id>
    <Library_Id>b6f408c5-6e6e-4bc0-90a5-0bb10becc2ce</Library_Id>
    <Title>Disable Self-signed SSL Certificates</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>iOS</Technology>
    <Type>Guideline</Type>
    <DirectLink>Disable Self-signed SSL Certificates</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="WikiText">
    <Data><![CDATA[==Applies To==

* iOS applications that send or receive sensitive data over the network.

==What to Do==

Disable the use of self-signed SSL certificates.

==Why==

Allowing the use of self-signed SSL certificates enables some types of man-in-the-middle attacks.

==How==

Self-signed SSL certificates are not allowed by default. Do not allow them. Avoid using the //allowsAnyHTTPSCertificateForHost// method in production releases, because it allows self-signed SSL certificates. Do not use the //continueWithoutCredentialForAuthenticationChallenge// selector within the //didReceiveAuthenticationChallenge// delegate method of //NSURLConnection// objects, because it enables self-signed SSL certificates.

==Communication Security Guidelines==
* [[Disable Self-signed SSL Certificates]]
* [[Use SSL to Protect Communications]]
* [[Use Strong SSL Configurations]]

==Communication Security Checklists==
* [[Self-signed SSL Certificates Are Disabled]]
* [[SSL Is Used to Protect Communications]]
* [[Strong SSL Configurations Are Used]]]]></Data>
  </Content>
</TeamMentor_Article>