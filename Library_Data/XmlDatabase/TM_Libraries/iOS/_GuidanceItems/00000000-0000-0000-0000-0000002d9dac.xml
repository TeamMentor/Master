<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-0000002d9dac</Id>
    <Library_Id>b6f408c5-6e6e-4bc0-90a5-0bb10becc2ce</Library_Id>
    <Title>Code Integrity Checks Are Implemented</Title>
    <Category>Code Integrity</Category>
    <Phase>Implementation</Phase>
    <Technology>iOS</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Code Integrity Checks Are Implemented</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="WikiText">
    <Data><![CDATA[==What to Check For==

Verify that code integrity checks are implemented.

==Why==

Code integrity checks help prevent software piracy and unauthorized modifications to the application. Code integrity checks do not provide 100% assurance of code integrity. Code integrity checks make it harder for an attacker to modify the application binary code without breaking it.

==How to Check==

To verify that code integrity checks are implemented:

# **Identify piracy check functions.** It's best if someone knows if piracy checks exist and where they are, otherwise it might be necessary to examine each function individually to determine its purpose.
# **Identify integrity check functions.** It's best if someone knows if integrity checks exist and where they are, otherwise it might be necessary to examine each function individually to determine its purpose.
# **Verify that integrity check functions protect piracy check functions.** Find calls to the piracy check functions and make sure that integrity check functions are also called to make sure that piracy check functions have not been tampered with.
# **Verify that piracy check and integrity check functions are scattered throughout the application.** Find calls to the piracy and integrity check functions to make sure they are called multiple times throughout the application.


==How to Fix==

To check code for integrity:

# **Write piracy check functions.** One common way to check if the application is not licensed properly is to check if the device is jailbroken. While a jailbroken device does not necessarily mean the application has been pirated, there are no fool-proof anti-piracy or code integrity measures for jailbroken devices. Some common ways to check for jailbroken devices are to check for the existence of files that only appear on jailbroken devices, such as Cydia. If piracy is not a concern, this step may be omitted.
# **Write integrity check functions.** The most common ways for implementing code integrity checks are by checking classes for expected addresses or checksums. The //class_getMethodImplementation// method returns a pointer a method; checking the value of this pointer against the expected value provides reasonable assurance that the method has not been modified during runtime.
# **Define integrity check functions as inline.** The integrity check functions written in the previous step should be defined as //inline// so that the compiler inserts the full integrity checking code wherever it is invoked.
# **Scatter integrity check functions throughout the application.** Multiple integrity checking functions spread out throughout the application make it harder for an attacker to find them all and patch them.

==Code Integrity Guidelines==
* [[Implement Code Integrity Checks]]
* [[Sign iOS Application Updates]]
* [[Sign iOS Applications]]

==Code Integrity Checklists==
* [[Code Integrity Checks Are Implemented]]
* [[iOS Application Updates Are Signed]]
* [[iOS Applications Are Signed]]

==Additional Resources==

* For more information about the //class_getMethodImplementation// method, please see https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html]]></Data>
  </Content>
</TeamMentor_Article>