<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-00000055b6fa</Id>
    <Library_Id>f798e6e6-1732-4172-9c47-9621d914efcd</Library_Id>
    <Title>XML Injection Attack</Title>
    <Category>Validation</Category>
    <Phase>NA</Phase>
    <Technology> Any</Technology>
    <Type>Attack</Type>
    <DirectLink>XML Injection Attack</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Applies To</h1>
  <p>
  </p>
  <ul>
    <li>Any application that writes user input to an XML file on a server.</li>
  </ul>
  <p />
  <h1>Description</h1>
  <p>An XML injection vulnerability will allow an attacker to insert malicious data into XML which resides on the server. Depending on the type of XML parser used (SAX or DOM), this malicious data could be used to either overwrite the values in previous nodes or cause the XML parser to consume an excessive amount of memory on the server.</p>
  <h1>Impact</h1>
  <ul>
    <li>Modification of previous node values in the XML </li>
    <li>Denial of Service on the server </li>
    <li>Exposure of entire XML document to unauthorized users. </li>
    <li>Addition of new nodes or even entire documents. </li>
    <li>Ability to modify or remove data that should not be accessed.</li>
  </ul>
  <h1>Vulnerabilities</h1>
  <ul>
    <li>Dynamic XML generation using untrusted input </li>
    <li>Incorrectly defined schema </li>
    <li>Lack of schema validation </li>
    <li>Failure to validate input and properly encode any dangerous meta characters according to the context</li>
  </ul>
  <a name="Countermeasures">
  </a>
  <h1>Countermeasures</h1>
  <ul>
    <li>
      <p>
        <strong>When loading an XML file on the server validate it against a defined XSD</strong>.</p>
    </li>
    <li>
      <p>
        <strong>Perform context-sensitive encoding of untrusted input</strong>. As with encoding data to be output in HTML, a whitelist approach should be taken. For each context which data is going to be inserted in (element, attribute value, etc.) a set of known-safe characters should be constructed. The data to be added should be checked against the whitelist, and any characters not specifically listed should be encoded. CDATA sections should be used to further ensure that the parser ignores special characters. Ideally, only non-XML values should be accepted from untrusted sources. If an XML blob must be accepted from an untrusted source, it should be manually reassembled from values parsed out and encoded after checking the received blob against an XSD.</p>
    </li>
    <li>
      <p>
        <strong>Untrusted input should be validated against an inclusion list before use</strong>. For example, use a RegEx pattern, primitive type casting, a domain constraint, or another validator. See the Additional Resources for more information on data validation.</p>
    </li>
    <li>
      <p>
        <strong>Trim XML documents to include only the data that is necessary to the application</strong>.</p>
    </li>
    <li>
      <p>
        <strong>Use XML processing pipelines to make the flow of data clear and threats easier to identify</strong>.</p>
    </li>
    <li>
      <p>
        <strong>Remove DOCTYPE element from user input before creating XML objects</strong>.</p>
    </li>
  </ul>
  <h1>Additional Resources</h1>
  <ul>
    <li>
      <a href="http://www.w3.org/XML/Processing/">http://www.w3.org/XML/Processing/</a>
    </li>
    <li>
      <a href="http://www-128.ibm.com/developerworks/xml/library/x-think37/index.html">http://www-128.ibm.com/developerworks/xml/library/x-think37/index.html</a>
    </li>
    <li>
      <a href="http://www.owasp.org/index.php/Data_Validation">http://www.owasp.org/index.php/Data_Validation</a>
    </li>
    <li>
      <a href="http://www-128.ibm.com/developerworks/xml/library/x-tipcfsx.html">http://www-128.ibm.com/developerworks/xml/library/x-tipcfsx.html</a>
    </li>
    <li>
      <a href="http://www.w3schools.com/xml/xml_cdata.asp">http://www.w3schools.com/xml/xml_cdata.asp</a>
    </li>
  </ul>
  <ul>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>