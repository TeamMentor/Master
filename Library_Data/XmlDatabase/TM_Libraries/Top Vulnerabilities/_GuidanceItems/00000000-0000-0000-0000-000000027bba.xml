<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-000000027bba</Id>
    <Library_Id>f798e6e6-1732-4172-9c47-9621d914efcd</Library_Id>
    <Title>Sanitize Data Passed to External Processes</Title>
    <Category>Sanitization</Category>
    <Phase>Implementation</Phase>
    <Technology> Any</Technology>
    <Type>Guideline</Type>
    <DirectLink>Sanitize Data Passed to External Processes</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h2>What to Do</h2>
  <p>Avoid passing user input to external processes. If user input must be passed to external processes, filter out all special characters from user input.</p>
  <h1>Why</h1>
  <p>Passing user input to external processes increases the risk of command injection vulnerabilities. This risk may be partially mitigated by removing any special characters from user input before passing it to external processes.</p>
  <h2>What to Do</h2>
  <p>If you need to use dynamically-generated query strings or commands in spite of the risk, properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass
 an extremely strict whitelist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).</p>
  <h1>Additional Resources</h1>
  <ul>
    <li>For more information about "CWE-88: Argument Injection or Modification", please see
<a href="http://cwe.mitre.org/data/definitions/88.html">http://cwe.mitre.org/data/definitions/88.html</a></li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>