<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1154780927" Content_Hash="-2106966475">
  <Metadata>
    <Id>ea26dddc-9b25-4905-82d2-bb72801b6d20</Id>
    <Library_Id>4738d445-bc9b-456c-8b35-a35057596c16</Library_Id>
    <Title>Protect Your Encryption Keys</Title>
    <Category>Encryption</Category>
    <Phase>Design</Phase>
    <Technology> Any</Technology>
    <Type>Principle</Type>
    <DirectLink>Protect Your Encryption Keys</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Description</h1>
  <p>An encryption key is a secret number used as input to the encryption and decryption processes. For encrypted data to remain secure, the key must be protected. If an attacker compromises the decryption key, your encrypted data is no longer secure.</p>
  <p>The following practices help secure your encryption keys: </p>
  <ul>
    <li>Use&amp;nbsp;platform provided&amp;nbsp;key management. </li>
    <li>Cycle your keys periodically. </li>
  </ul>
  <p>
    <strong>Use&amp;nbsp;Platform Provided&amp;nbsp;Key Management</strong>
  </p>
  <p>One of the major advantages of using platform provided key management is that the key management issue is handled by the operating system. For example, if you are using the .NET framework, you can use DPAPI to handle key management. The key that DPAPI uses is derived from the password that is associated with the process account that calls the DPAPI functions. You can use DPAPI to pass the burden of key management to the operating system.</p>
  <p>
    <strong>Cycle Your Keys Periodically</strong>
  </p>
  <p>Generally, a static secret is more likely to be discovered over time. Questions to keep in mind are: Did you write it down somewhere? Did Bob, the administrator with the secrets, change positions in your company or leave the company? Do not overuse keys.</p>]]></Data>
  </Content>
</TeamMentor_Article>