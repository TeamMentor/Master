<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-00000032fa80</Id>
    <Library_Id>f215ceee-9a08-41d9-b2c1-bbcc058a8f32</Library_Id>
    <Title>Use Parameterized Methods for Database Access</Title>
    <Category>Database Security</Category>
    <Phase>Implementation</Phase>
    <Technology>Android</Technology>
    <Type>Guideline</Type>
    <DirectLink>Use Parameterized Methods for Database Access</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="WikiText">
    <Data><![CDATA[==What to Do==

Use parameterized query methods for database access.

==Why==

Using parameterized query methods for database access prevents SQL injection vulnerabilities.

==How==

The Android API includes parameterized functions for querying SQLite databases. Avoid using the rawQuery method, because it may be used in a manner that introduces SQL injection vulnerabilities, by including untrusted input in the SQL query string.

Use the following method for SELECT statements:

*//query//

Use the following methods for INSERT statements:

*//insert//
*//insertOrThrow//
*//insertWithOnConflict//

Use the following methods for UPDATE statements:

*//update//
*//updateWithOnConflict//

Use the following method for DELETE statements:

*//delete//

If your application uses some other API, please make sure that it uses parameterized methods for database access.

==Additional Resources==

*For more information about the Android SQLite API, please see http://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.html]]></Data>
  </Content>
</TeamMentor_Article>