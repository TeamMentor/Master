<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-00000045de75</Id>
    <Library_Id>f215ceee-9a08-41d9-b2c1-bbcc058a8f32</Library_Id>
    <Title>Android Applications Are Signed</Title>
    <Category>Code Integrity</Category>
    <Phase>Implementation</Phase>
    <Technology>Android</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Android Applications Are Signed</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="WikiText">
    <Data><![CDATA[==What to Check For==

Verify that applications are signed.

==Why==

Signing the application binary helps verify that the application came from a trusted source.

==How to Check==

If applications are not signed properly, they will not run. To verify that an application is signed:

# **Install the application.** Follow the standard procedure to install the application.
# **Run the application.** Once the application is installed, launch it. If the application runs, then it has been signed successfully.

==How to Fix==

To sign Android applications:

# **Generate a private key.** Use the //keytool// command to generate a suitable private key. The key has to represent the entity responsible for the application. The key has to have a validity period that ends after 22 October 2033. The key should be different from the debug key. It is okay for the key to be self-signed. More information about using the //keytool// command is available at the link in the Additional Resources section.
# **Protect the private key.** The private key should be kept secret to prevent attackers from signing malicious applications with it. Applications that are signed with the same private key appear to come from the same source and a crafty attacker may take advantage of that by passing malicious applications off as yours.
# **Build the application.** Build the application in release mode. The application is not signed automatically. Export the unsigned APK package.
# **Sign the application.** Use the //Jarsigner// tool to sign the application package.  More information about using the //Jarsigner// command is available at the link in the Additional Resources section.
# **Align the package.** Use the //zipalign// command to align the signed APK. More information about using the //zipalign// command is available at the link in the Additional Resources section.

==Additional Resources==

* For more information about signing Android applications, please see http://developer.android.com/tools/publishing/app-signing.html]]></Data>
  </Content>
</TeamMentor_Article>