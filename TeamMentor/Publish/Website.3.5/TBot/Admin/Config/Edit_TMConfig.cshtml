
<style>
    .form-group 
        {
            margin-top    : 5px;
            margin-bottom : 5px;
        }
    .input-tag  
        {
            height        : 20px
        }       
    .alert-small 
        {
            padding:  7px 14px 5px 10px;
        }
</style>

<script>
    //var TMUser =angular.module('TMUser',[]);

    function EditObject($scope, $http, $timeout) 
    {
        _scope = $scope;
        var asmxService = '/Aspx_Pages/TM_WebServices.asmx/';
        var invokeService = function (method, parameters, onSuccess) {
            $http.post(asmxService + method, parameters)
                .success(function (data) {
                    onSuccess(data.d);
                });
        };
        var setCSRFToken_And_TriggerDataLoad = function () {
            invokeService('Current_User',
                {},
                function (data) {
                    $http.defaults.headers.post['CSRF-Token'] = data.CSRF_Token;
                    loadTMConfigData();
                });
        };
        var loadTMConfigData = function () {
            invokeService('TMConfigFileLocation', {}, function (data) 
                {
                    $scope.TMConfigPath = data;
                });

            invokeService('TMConfigFile', {}, function (data) 
                {
                    $scope.tmConfig     = data;
                    $scope.objectToEdit = angular.toJson(data, true);
                    //$scope.liveObject = $scope.objectToEdit;
                    $scope.message = "data loaded";
                    show_Temporary_Ok("Data loaded");
                    //when radio button is changed, the Allow_From_URI field is cleared.
                    var initializing = true;
                    $scope.$watch('tmConfig.TMSecurity.X_Frame_Options', function () {
                        if (initializing)
                            initializing = false;
                        else
                            $scope.tmConfig.TMSecurity.Allow_From_URI = '';
                    });
                });
        };

        $scope.saveObject = function()
            {
                show_Temporary_Info("Saving data ... ");               
            
                invokeService('SetTMConfigFile', { tmConfig: $scope.tmConfig }, function (result) 
                    {
                        if(result)
                            show_Temporary_Ok("TMConfig data saved");
                        else
                            $scope.result_Error = "Failed to save SecretData (check server logs)";
                    });                         
            };
        $scope.saveRawObject = function () 
            {
                $scope.message = "saving data";

                invokeService('SetTMConfigFile', { tmConfig: angular.fromJson($scope.objectToEdit) }, function (result) 
                    {
                        $scope.message = "data saved: " + result;                    
                    });

            };       
        
         // internal functions
        var show_Temporary_Info = function(infoMessage)
            {
                $scope.result_Info  = infoMessage;
                $timeout(function() { $scope.result_Info = '';}, 2500);
            };
        var show_Temporary_Ok = function(okMessage)
            {
                $scope.result_Info = '';
                $scope.result_Ok = okMessage;
                $timeout(function() { $scope.result_Ok = '';}, 2500);
            };
        
        $scope.message        = "loading data";
        
        $scope.result_Ok      = "";
        $scope.result_Error   = "";
        show_Temporary_Info("Loading Data");
        
        setCSRFToken_And_TriggerDataLoad();       

    };   
    

     angular.module('tbot')
       .directive('tmInput', function()
            {
                return {
                            restrict    : 'E',
                            scope       : { tmModel : "=" , tmName : "="},
                            template    : ' <div class="form-group">                                       ' +
                                          '     <label  class="col-sm-6 control-label">{{tmName}}</label>  ' +
                                          '      <div class="col-sm-6">                                    ' +
                                          '          <input class="form-control" type="text"               ' +
                                          '                 ng-model="tmModel"/>                           ' +
                                          '      </div>                                                    ' +       
                                          '  </div>                                                        '    
                       };
            })      
    .directive('tmCheckbox', function()
            {
                return {
                            restrict    : 'E',
                            scope       : { tmModel : "=" , tmName : "="},
                            template    : ' <div class="form-group">                                        ' +
                                          '     <label  class="col-sm-6 control-label">{{tmName}}</label>   ' +
                                          '     <div class="col-sm-6">                                      ' +
                                          '         <div class="checkbox">                                  ' +                                          
                                          '                 <input type="checkbox" ng-model="tmModel"/>     ' +                                          
                                          '         </div>                                                  ' +
                                          '     </div>                                                      ' +
                                          '  </div>                                                         '    
                       };
                              
            })
     .directive('tmRadio', function()
     {
         return {
             restrict    : 'E',
             scope       : { tmModel : "=" , tmName : "=" , tmValue: "="},
             template: ' <div class="form-group">                                        ' +
                           '     <label  class="col-sm-6 control-label">{{tmName}}</label>   ' +
                           '     <div class="col-sm-6"  style="padding-left: 10px;">                                      ' +
                           '         <div style="margin: 4px">                                  ' +
                           '                 <input type="radio" name={{tmName}} ng-model="tmModel" value={{tmValue}} ng-change="onradiochange"  />     ' +
                           '         </div>                                                  ' +
                           '     </div>                                                      ' +
                           '  </div>                                                         '    
         };
                              
     })
    
</script>


<h4>Editing TMConfig.Config file (and preview)</h4>
<br/>



<div ng-controller="EditObject">
    
    <p>
        <strong>TMConfig.Config path</strong>          : {{TMConfigPath}}
    </p>
    <br />

       
    <!--<pre>
        {{tmConfig}}
        </pre>
        -->
    <small></small>
    <form class="form-horizontal">        
        <div class= "row">
            
            <!--TMSecurity-->
            <div class="col-sm-6">
                <div class="panel panel-success">
                    <div class="panel-heading">
                        <h3 class="panel-title"><b>TM Security</b>
                        </h3>
                    </div>
                    <div class="panel-body">
                        <tm-checkbox tm-name="'Show Content to Anonymous Users'" tm-model="tmConfig.TMSecurity.Show_ContentToAnonymousUsers"></tm-checkbox>
                        <tm-checkbox tm-name="'Show Library to Anonymous Users'" tm-model="tmConfig.TMSecurity.Show_LibraryToAnonymousUsers"></tm-checkbox>
                        <tm-checkbox tm-name="'SSL Redirect Http to Https'" tm-model="tmConfig.TMSecurity.SSL_RedirectHttpToHttps"></tm-checkbox>
                        <tm-checkbox tm-name="'New Accounts Enabled'" tm-model="tmConfig.TMSecurity.NewAccounts_Enabled"></tm-checkbox>
                        <tm-checkbox tm-name="'New Accounts Don\'t Expire'" tm-model="tmConfig.TMSecurity.NewAccounts_DontExpire"></tm-checkbox>
                        <tm-checkbox tm-name="'Eval Accounts Enabled'" tm-model="tmConfig.TMSecurity.EvalAccounts_Enabled"></tm-checkbox>
                        <tm-input tm-name="'Eval Accounts Days'" tm-model="tmConfig.TMSecurity.EvalAccounts_Days"></tm-input>
                        <tm-checkbox tm-name="'Email Admin: On NewUsers'" tm-model="tmConfig.TMSecurity.EmailAdmin_On_NewUsers"></tm-checkbox>
                        <tm-input tm-name="'Default Admin: UserName'" tm-model="tmConfig.TMSecurity.Default_AdminUserName"></tm-input>
                        <tm-input tm-name="'Default Admin: Password'" tm-model="tmConfig.TMSecurity.Default_AdminPassword"></tm-input>
                        <tm-input tm-name="'Default Admin: Email'" tm-model="tmConfig.TMSecurity.Default_AdminEmail"></tm-input>
                        <tm-checkbox tm-name="'REST Allow Cross-Domain Access'" tm-model="tmConfig.TMSecurity.REST_AllowCrossDomainAccess"></tm-checkbox>
                        <tm-checkbox tm-name="'Sanitize Html Content'" tm-model="tmConfig.TMSecurity.Sanitize_HtmlContent"></tm-checkbox>

                        <div id="x-frame-options-settings">
                            <!--Configuring X-Frame-Options HTTP Header-->
                            <div class="form-group">
                                <label class="col-sm-8 control-label">X-Frame-Options Response Headers Configuration:</label>
                            </div>
                            <tm-radio tm-name="'Do not send header'" tm-value="'NONE'" tm-model="tmConfig.TMSecurity.X_Frame_Options"></tm-radio>
                            <tm-radio tm-name="'SAMEORIGIN'" tm-value="'SAMEORIGIN'" tm-model="tmConfig.TMSecurity.X_Frame_Options"></tm-radio>
                            <tm-radio tm-name="'DENY'" tm-value="'DENY'" tm-model="tmConfig.TMSecurity.X_Frame_Options"></tm-radio>
                            <tm-radio tm-name="'ALLOW-FROM'" tm-value="'ALLOW-FROM'" tm-model="tmConfig.TMSecurity.X_Frame_Options"></tm-radio>
                            <!--ALLOW-FROM URL -->
                            <div class="form-group" ng-show="tmConfig.TMSecurity.X_Frame_Options =='ALLOW-FROM'">
                                <label class=" col-sm-6 control-label">
                                    Provide URL
                                </label>
                                <div class="col-sm-6">
                                    <input class="form-control" type="url" ng-model="tmConfig.TMSecurity.Allow_From_URI"
                                           ng-required="tmConfig.TMSecurity.X_Frame_Options =='ALLOW-FROM'"
                                           placeholder="eg https://www.example.com"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                    <!--OnInstallation-->
                    <div class="panel panel-success">
                        <div class="panel-heading">
                            <h3 class="panel-title"><b>OnInstallation</b>
                            </h3>
                        </div>
                        <div class="panel-body">
                            <tm-checkbox tm-name="'Force Default Admin Password'" tm-model="tmConfig.OnInstallation.ForceDefaultAdminPassword"></tm-checkbox>
                        </div>
                    </div>
            </div>
           
            <!--TMConfig-->
            <div class="col-sm-6">
                <div class="panel panel-success">
                    <div class="panel-heading">
                        <h3 class="panel-title"><b>TM Setup</b></h3>
                    </div>
                    <div class="panel-body">                        
                        <tm-input    tm-name="'TM Library Data Virtual Path'"     tm-model="tmConfig.TMSetup.TMLibraryDataVirtualPath"></tm-input>
                        <tm-input    tm-name="'Xml Libraries Path'"               tm-model="tmConfig.TMSetup.XmlLibrariesPath"></tm-input>
                        <tm-input    tm-name="'Libraries Uploaded Files'"         tm-model="tmConfig.TMSetup.LibrariesUploadedFiles"></tm-input>                        
                        <tm-checkbox tm-name="'Enable GZip for Web Services'"     tm-model="tmConfig.TMSetup.EnableGZipForWebServices"></tm-checkbox>
                        <tm-checkbox tm-name="'Enable 304 Redirects'"             tm-model="tmConfig.TMSetup.Enable304Redirects"></tm-checkbox>
                        <tm-checkbox tm-name="'Show Detailed Error Messages'"     tm-model="tmConfig.TMSetup.ShowDetailedErrorMessages"></tm-checkbox>
                    </div>
                </div>
            </div>                        
               
            <!--WindowsAuthentication-->
            <div class="col-sm-6">
                <div class="panel panel-success">
                    <div class="panel-heading">
                        <h3 class="panel-title"><b>WindowsAuthentication</b></h3>
                    </div>
                    <div class="panel-body">
                        <tm-checkbox   tm-name="'Enabled'"              tm-model="tmConfig.WindowsAuthentication.Enabled"></tm-checkbox>                                                
                        <tm-input      tm-name="'Reader Group'"         tm-model="tmConfig.WindowsAuthentication.ReaderGroup"></tm-input>
                        <tm-input      tm-name="'Editor Group'"         tm-model="tmConfig.WindowsAuthentication.EditorGroup"></tm-input>
                        <tm-input      tm-name="'Admin Group'"          tm-model="tmConfig.WindowsAuthentication.AdminGroup"></tm-input>
                    </div>
                </div>
                             
          
            </div>
        </div>
        
        <div class= "row">
            <div class="form-group">
                <div class="col-sm-offset-1 col-sm-2">                                  
                    <button class="btn btn-primary col-sm-12" ng-click="saveObject()">
                        Save Data
                    </button>                                                                                             
                </div>
     
                <!-- Ok, Info and Error messages-->                    
                <div class="col-sm-3" ng-hide="result_Ok =='' ">
                    <div class="alert alert-success alert-small">
                        <b>Success: </b>{{result_Ok}}
                    </div>
                </div>                    
                <div class="col-sm-3" ng-hide="result_Info =='' ">
                    <div class="alert alert-warning alert-small">
                        <b>Info: </b>{{result_Info}}
                    </div>
                </div>       
                <div class="col-sm-5" ng-hide="result_Error =='' ">                                  
                    <div class="alert alert-danger alert-small">
                        <b>Error: </b>{{result_Error}}
                    </div>
                </div>                       
            </div>                   
        </div>                       
    </form>
        

    <br />
    <br/>
    <br/>
    
    
    <div class="alert alert-info">NOTE: the editor below is the old one and changes made to it are NOT synced in real-time with the UI editor above (and vice-versa)</div>

    
    <form role="form">
        <div class="form-group">
            <label  class="col-sm-2 control-label">File Contents</label>
            <div class="col-sm-10">

                <textarea ng-model="objectToEdit"  rows="20" class="form-control" >        </textarea>
                <br />
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button class="btn btn-primary" ng-click="saveRawObject()">Save</button>
                    <span>{{message}}</span>            
                </div>
            </div>
        </div>
        
    </form>       
</div>